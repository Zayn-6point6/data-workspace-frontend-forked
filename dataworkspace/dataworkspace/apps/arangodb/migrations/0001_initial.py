# Generated by Django 4.2.7 on 2024-04-02 09:26

import ckeditor.fields
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ArangoDataset",
            fields=[
                ("created_date", models.DateTimeField(auto_now_add=True)),
                ("modified_date", models.DateTimeField(auto_now=True)),
                ("deleted", models.BooleanField(default=False)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("short_description", models.CharField(max_length=256)),
                ("slug", models.SlugField()),
                ("description", ckeditor.fields.RichTextField()),
                (
                    "user_access_type",
                    models.CharField(
                        choices=[
                            (
                                "OPEN",
                                "Everyone - for public data only, suitable to be shown in demos",
                            ),
                            ("REQUIRES_AUTHENTICATION", "All logged in users"),
                            (
                                "REQUIRES_AUTHORIZATION",
                                "Only specific authorized users or email domains",
                            ),
                        ],
                        default="REQUIRES_AUTHORIZATION",
                        max_length=64,
                    ),
                ),
                (
                    "authorized_email_domains",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256),
                        blank=True,
                        default=list,
                        help_text="Comma-separated list of domain names without spaces, e.g trade.gov.uk,fco.gov.uk",
                        size=None,
                    ),
                ),
                (
                    "eligibility_criteria",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                (
                    "request_approvers",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=256), null=True, size=None
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "information_asset_manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="info_asset_managed_graph_datasets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "information_asset_owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="info_asset_owned_graph_datasets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="updated+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "app_graphdataset",
            },
        ),
        migrations.CreateModel(
            name="SourceGraphCollection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("reference_number", models.IntegerField(null=True)),
                (
                    "graph_dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="arangodb.arangodataset"
                    ),
                ),
            ],
            options={
                "db_table": "app_sourcegraphcollection",
            },
        ),
        migrations.CreateModel(
            name="GraphDataSetUserPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="arangodb.arangodataset"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "db_table": "app_graphdatasetuserpermission",
                "unique_together": {("user", "collection")},
            },
        ),
    ]
